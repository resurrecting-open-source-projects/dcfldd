name: Release tarball

on:
  push:
    tags:
      - "**"

jobs:
  release:
    name: "Release"

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: "Determine tag"
      id: "determine-tag"
      run: "echo \"::set-output name=tag::${GITHUB_REF#refs/tags/v}\""

    - name: "Determine configure.ac version"
      id: "determine-ac"
      run: "echo \"::set-output name=version::`sed -n -E 's/AC_INIT\\(\\[dcfldd\\], \\[(.+?)\\],.*$/\\1/p' configure.ac`\""

    - name: "Fail when tag version != configure.ac version"
      run: "exit 1"
      if: steps.determine-tag.outputs.tag != steps.determine-ac.outputs.version

    - name: Build and check distribution tarball
      run: |
        ./autogen.sh
        ./configure
        make distcheck

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.determine-tag.outputs.tag }}
        release_name: Release ${{ steps.determine-tag.outputs.tag }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dcfldd-${{ steps.determine-tag.outputs.tag }}.tar.gz
        asset_name: dcfldd-${{ steps.determine-tag.outputs.tag }}.tar.gz
        asset_content_type: application/gzip
